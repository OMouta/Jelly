name: Release

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Required to upload release assets

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '23'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Build binaries
      run: |
        npm run build:linux
        npm run build:windows  
        npm run build:mac
        
        # List what files were actually created
        ls -la binaries/
        
        # Get version from tag (remove 'v' prefix)
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "Version: $VERSION"
        
        # Rename and zip binaries to match Aftman expected format
        cd binaries
        
        # Handle Linux binary
        if [ -f "jelly-linux" ]; then
          mv jelly-linux jelly
        fi
        if [ -f "jelly" ]; then
          zip "jelly-${VERSION}-linux-x86_64.zip" jelly
          rm jelly
        fi
        
        # Handle Windows binary
        if [ -f "jelly-win.exe" ]; then
          mv jelly-win.exe jelly.exe
        elif [ -f "jelly.exe" ]; then
          true  # already named correctly
        fi
        if [ -f "jelly.exe" ]; then
          zip "jelly-${VERSION}-windows-x86_64.zip" jelly.exe
          rm jelly.exe
        fi
        
        # Handle macOS binary
        if [ -f "jelly-macos" ]; then
          mv jelly-macos jelly
        fi
        if [ -f "jelly" ]; then
          zip "jelly-${VERSION}-macos-x86_64.zip" jelly
          rm jelly
        fi
        
        # List final files
        ls -la
        
        # Create checksums for Aftman
        for file in *.zip; do
          if [ -f "$file" ]; then
            sha256sum "$file" > "${file}.sha256"
          fi
        done
    
    - name: Upload Release Assets
      run: |
        # Get version from tag
        VERSION=${GITHUB_REF#refs/tags/v}
        
        # Upload all zip files and their checksums
        gh release upload ${{ github.event.release.tag_name }} \
          binaries/jelly-${VERSION}-linux-x86_64.zip \
          binaries/jelly-${VERSION}-linux-x86_64.zip.sha256 \
          binaries/jelly-${VERSION}-windows-x86_64.zip \
          binaries/jelly-${VERSION}-windows-x86_64.zip.sha256 \
          binaries/jelly-${VERSION}-macos-x86_64.zip \
          binaries/jelly-${VERSION}-macos-x86_64.zip.sha256 \
          --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
