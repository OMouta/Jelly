name: Release

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Required to upload release assets

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '23'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Build binaries
      run: |
        # Get version from tag (remove 'v' prefix)
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "Version: $VERSION"
        
        # Build each platform separately and rename immediately to avoid conflicts
        
        # Build Linux
        npm run build:linux
        cd binaries
        mv jelly jelly-linux
        cd ..
        
        # Build Windows  
        npm run build:windows
        # Windows creates jelly.exe, no need to rename yet
        
        # Build macOS
        npm run build:mac
        cd binaries
        mv jelly jelly-macos  # Rename immediately to avoid overwriting Linux
        cd ..
        
        # List what we have
        ls -la binaries/
        
        # Now zip everything with proper names
        cd binaries
        
        # Zip Linux binary
        if [ -f "jelly-linux" ]; then
          zip "jelly-${VERSION}-linux-x86_64.zip" jelly-linux
          rm jelly-linux
        fi
        
        # Zip Windows binary
        if [ -f "jelly.exe" ]; then
          zip "jelly-${VERSION}-windows-x86_64.zip" jelly.exe
          rm jelly.exe
        fi
        
        # Zip macOS binary
        if [ -f "jelly-macos" ]; then
          zip "jelly-${VERSION}-macos-x86_64.zip" jelly-macos
          rm jelly-macos
        fi
        
        # List final files
        ls -la
        
        # Create checksums for Aftman
        for file in *.zip; do
          if [ -f "$file" ]; then
            sha256sum "$file" > "${file}.sha256"
          fi
        done
    
    - name: Upload Release Assets
      run: |
        # Get version from tag
        VERSION=${GITHUB_REF#refs/tags/v}
        
        # Upload all zip files and their checksums
        gh release upload ${{ github.event.release.tag_name }} \
          binaries/jelly-${VERSION}-linux-x86_64.zip \
          binaries/jelly-${VERSION}-linux-x86_64.zip.sha256 \
          binaries/jelly-${VERSION}-windows-x86_64.zip \
          binaries/jelly-${VERSION}-windows-x86_64.zip.sha256 \
          binaries/jelly-${VERSION}-macos-x86_64.zip \
          binaries/jelly-${VERSION}-macos-x86_64.zip.sha256 \
          --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
